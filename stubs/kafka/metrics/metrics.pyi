from kafka.metrics import AnonMeasurable as AnonMeasurable, KafkaMetric as KafkaMetric, MetricConfig as MetricConfig, MetricName as MetricName
from kafka.metrics.stats import Sensor as Sensor
from typing import Any, Optional

logger: Any

class Metrics:
    def __init__(self, default_config: Optional[Any] = ..., reporters: Optional[Any] = ..., enable_expiration: bool = ...): ...
    @property
    def config(self): ...
    @property
    def metrics(self): ...
    def metric_name(self, name: Any, group: Any, description: str = ..., tags: Optional[Any] = ...): ...
    def get_sensor(self, name: Any): ...
    def sensor(self, name: Any, config: Optional[Any] = ..., inactive_sensor_expiration_time_seconds: Any = ..., parents: Optional[Any] = ...): ...
    def remove_sensor(self, name: Any) -> None: ...
    def add_metric(self, metric_name: Any, measurable: Any, config: Optional[Any] = ...) -> None: ...
    def remove_metric(self, metric_name: Any): ...
    def add_reporter(self, reporter: Any) -> None: ...
    def register_metric(self, metric: Any) -> None: ...
    class ExpireSensorTask:
        @staticmethod
        def run(metrics: Any) -> None: ...
    def close(self) -> None: ...
