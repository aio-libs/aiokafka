from kafka.protocol.api import Request as Request, Response as Response
from kafka.protocol.types import Array as Array, Boolean as Boolean, Int16 as Int16, Int32 as Int32, Schema as Schema, String as String
from typing import Any

class MetadataResponse_v0(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataResponse_v1(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataResponse_v2(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataResponse_v3(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataResponse_v4(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataResponse_v5(Response):
    API_KEY: int = ...
    API_VERSION: int = ...
    SCHEMA: Any = ...

class MetadataRequest_v0(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: Any = ...

class MetadataRequest_v1(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: int = ...
    NO_TOPICS: Any = ...

class MetadataRequest_v2(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: int = ...
    NO_TOPICS: Any = ...

class MetadataRequest_v3(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: int = ...
    NO_TOPICS: Any = ...

class MetadataRequest_v4(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: int = ...
    NO_TOPICS: Any = ...

class MetadataRequest_v5(Request):
    API_KEY: int = ...
    API_VERSION: int = ...
    RESPONSE_TYPE: Any = ...
    SCHEMA: Any = ...
    ALL_TOPICS: int = ...
    NO_TOPICS: Any = ...

MetadataRequest: Any
MetadataResponse: Any
