conditions: v1

language: python

branches:
  only:
  - master
  - v0.2
  - v0.4
  - "/^v\\d+\\.\\d+\\.\\d+$/"
  - "/^v\\d+\\.\\d+\\.\\d+\\.dev\\d*$/"

stages:
- &stage_sanity_test Flake and unit test
- &stage_functional Run main functional tests
- name: &stage_deploy Optionally run deploy to PyPi
  # This will prevent deploy unless it's a tagged commit:
  if: tag IS present

matrix:
  fast_finish: true
  include:
    - stage: *stage_sanity_test
      sudo: false
      python: &mainstream_python 3.6
      script:
      - make ci-test-unit
    - sudo: false
      python: *mainstream_python
      script:
      - make flake
    - sudo: false
      python: *mainstream_python
      script:
      - make check-readme

    # All Package build combinations for newest Kafka
    - stage: *stage_functional
      sudo: true
      python: 3.5
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: 3.5
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1 AIOKAFKA_NO_EXTENSIONS=1
      script:
      - make ci-test-all
    - sudo: true
      python: 3.6
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: 3.6
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1 AIOKAFKA_NO_EXTENSIONS=1
      script:
      - make ci-test-all
    - sudo: true
      python: 3.7
      dist: xenial
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: 3.7
      dist: xenial
      services:
      - docker
      env: KAFKA_VERSION=2.4.0 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1 AIOKAFKA_NO_EXTENSIONS=1
      script:
      - make ci-test-all

    # Older Kafka versions with mainstream python
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=0.9.0.1 SCALA_VERSION=2.11 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=0.10.2.1 SCALA_VERSION=2.11 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=0.11.0.3 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=1.1.1 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=2.1.1 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=2.2.2 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all
    - sudo: true
      python: *mainstream_python
      services:
      - docker
      env: KAFKA_VERSION=2.3.1 SCALA_VERSION=2.12 PYTHONASYNCIODEBUG=1
      script:
      - make ci-test-all

    - stage: *stage_deploy
      python: *mainstream_python
      script: skip
      deploy:
        provider: pypi
        user: aio-libs-bot
        password:
          secure: BSV2mPhyeyM8N7IdNtAlF11+pAQu9jdJQUOWWSfQBar+qgfFobkm23OZtvVZzl68U+cYzROlv6m66Xu9SN5MdPezrEXKKmcnzC/iREzHyB//Edrj+WsyqbmeqW3MGNgUu3bGq23Jw629jU3oGCm59cCa04Z/ZLhWHowH0UVVI/cbzfI5nc0nJkPSzYE2+L5DUjLGUgAA2+bygAWu2DpaUlVq5Pd+ApRSwvhg+qV2QHYCM6ypX5X0IjVNORQev9UuiKgAEFAeYcCgi0LB1DuasRVCf+yQeHa7xUGjtGS4PNWyK1jyyvJGYjV9XI1vUfnR5iKzKQVkBafqcCsW65H4D7m9cSVfU9P23XaHmwKAqYHG0LOyis/NT4cI5lRu7NhyTb6k3qex5jOGlIWrGGuA2Aer8jsMZ4msZDYlRksBUQD4TJpeoCxYikxuPx9ylE8cGle2qMHzdayM31rZ6AJSqZEMGFlWPIOsvTyBtO0yYFF+glP/cw1FUxDYTeBynEyjIH0PpMGwLY8rU4EZlQI4pU0aKEsziZt6AkkkGE7R3KMTWiOcqdprNp41RoW1Bqjrkf/j0iIzsvZv0aol0hfcfxg3jKnGagVZfmX9K3UQexDgIe5n/1P/dM91Zh3uMkrRMt2WYExd6nI5B3YzxTj1xzla7fYFixl6BudS9lhkmvg=
        distributions: sdist
        on:
          tags: true
          all_branches: true

addons:
  apt:
    packages:
    - libsnappy-dev
    - krb5-user

install:
- pip install --upgrade pip setuptools wheel
- pip install -r requirements-ci.txt
- pip install codecov
- pip install -vv -Ue .  # We set -vv to see compiler exceptions/warnings

after_success:
- codecov

cache: pip

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
